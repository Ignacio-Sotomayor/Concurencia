package database;


	import java.sql.Connection;
	import java.sql.DriverManager;
	import java.sql.PreparedStatement;
	import java.sql.ResultSet;
	import java.sql.SQLException;
	import java.sql.Statement;
	import java.sql.Date;
	import java.util.Iterator;
	import java.util.ArrayList;
	import java.util.GregorianCalendar;

	public class DB {

		private static DB baseDatos;
		private Connection conexion;
		
		private DB() throws SQLException {
			System.out.println("Iniciando base de datos");
			try {
				Class.forName("com.mysql.cj.jdbc.Driver");
			} catch (ClassNotFoundException e) {
				System.out.println("No se pudo cargar el puente JDBC-ODBC.");
				return;
			}
		}
		
		public static DB getDB() throws SQLException{
			if(baseDatos == null)	baseDatos = new DB();
			
			return baseDatos;
		}

		public void conectar() throws SQLException {
			conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/agenda", "root", "");
			System.out.println("Conexion Exitosa");
		}
		
		public void desconectar() throws SQLException {
			System.out.println("Desconenctandose del Sevidor ...");
			conexion.close();
			System.out.println("Desconexion Exitosa");
		}
		
		public void agregarPersona(Persona p) throws SQLException{
			
			String nombre = p.getName();
			String telefono = p.getTelefono();
			Date fecha = new Date(p.getFecha().getTimeInMillis());

			PreparedStatement agregar = this.conexion
					.prepareStatement("INSERT INTO personas (nombre,nacimiento,telefono) VALUES (?,?,?)");

			agregar.setString(1, nombre);
			agregar.setDate(2, fecha);
			agregar.setString(3, telefono);
			agregar.executeUpdate();
		}
		
		public Iterator<Persona> obtenerPersonas() throws SQLException{
			
			ArrayList<Persona> agenda = new ArrayList<Persona>();
			String nombre, telefono;
			GregorianCalendar fecha;
			Statement sentencia = conexion.createStatement();
			ResultSet resultado = sentencia.executeQuery("SELECT * FROM personas ORDER BY nombre");
			
			while (resultado.next()) {
				nombre = resultado.getString("nombre");
				fecha = new GregorianCalendar();
				fecha.setTime(resultado.getDate("nacimiento"));
				telefono = resultado.getString("telefono");
				Persona p = new Persona(nombre,telefono,fecha);
				agenda.add(p);
			}
			
			return agenda.iterator();
		}
		
	}
	
}
